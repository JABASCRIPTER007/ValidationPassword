{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    isWeak: a0\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    isMedium: a0\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    isStrong: a0\n  };\n};\nexport class SimpleGreetingFormComponent {\n  constructor() {\n    // Initial state\n    this.password = '';\n    this.Weak = 'gray';\n    this.Medium = 'gray';\n    this.Strong = 'gray';\n    this.isWeak = false;\n    this.isMedium = false;\n    this.isStrong = false;\n    this.onChange = _ => {};\n    this.onTouched = () => {};\n  }\n  writeValue(value) {\n    this.password = value;\n    this.validatePassword();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validatePassword() {\n    // Condition if there are less than 8 values in the input\n    if (this.password.length < 8) {\n      this.isWeak = false;\n      this.isMedium = false;\n      this.isStrong = false;\n      this.Weak = 'red';\n      this.Medium = 'red';\n      this.Strong = 'red';\n      this.onChange('');\n      return;\n    }\n    // Assignment of variables for validation\n    const hasLetters = /[a-zA-Z]/.test(this.password);\n    const hasNumbers = /\\d/.test(this.password);\n    const hasSymbols = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(this.password);\n    // Determining the content in the input\n    const complexityLevel = (hasLetters ? 1 : 0) + (hasNumbers ? 1 : 0) + (hasSymbols ? 1 : 0);\n    // Checking the received number from the variable\n    switch (complexityLevel) {\n      // First level\n      case 1:\n        this.isWeak = true;\n        this.isMedium = true;\n        this.isStrong = false;\n        this.Weak = 'red';\n        this.Medium = 'gray';\n        this.Strong = 'gray';\n        this.onChange(this.password);\n        return;\n      // Second level\n      case 2:\n        this.isWeak = false;\n        this.isMedium = true;\n        this.isStrong = false;\n        this.Weak = 'yellow';\n        this.Medium = 'yellow';\n        this.Strong = 'gray';\n        this.onChange(this.password);\n        return;\n      // Three level\n      case 3:\n        this.isWeak = false;\n        this.isMedium = false;\n        this.isStrong = true;\n        this.Weak = 'green';\n        this.Medium = 'green';\n        this.Strong = 'green';\n        this.onChange(this.password);\n        return;\n    }\n  }\n  onPasswordChange(event) {\n    this.password = event.target.value;\n    this.validatePassword();\n  }\n}\nSimpleGreetingFormComponent.ɵfac = function SimpleGreetingFormComponent_Factory(t) {\n  return new (t || SimpleGreetingFormComponent)();\n};\nSimpleGreetingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SimpleGreetingFormComponent,\n  selectors: [[\"app-simple-greeting-form\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SimpleGreetingFormComponent),\n    multi: true\n  }])],\n  decls: 11,\n  vars: 19,\n  consts: [[\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"password-strength\"], [1, \"strength-indicator\", \"weak\", 3, \"ngClass\", \"ngStyle\"], [1, \"strength-indicator\", \"medium\", 3, \"ngClass\", \"ngStyle\"], [1, \"strength-indicator\", \"strong\", 3, \"ngClass\", \"ngStyle\"]],\n  template: function SimpleGreetingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function SimpleGreetingFormComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.password = $event;\n      })(\"input\", function SimpleGreetingFormComponent_Template_input_input_3_listener() {\n        return ctx.validatePassword();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵelement(6, \"span\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"span\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵelement(10, \"span\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.isWeak))(\"ngStyle\", i0.ɵɵpureFunction1(9, _c1, ctx.Weak));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c2, ctx.isMedium))(\"ngStyle\", i0.ɵɵpureFunction1(13, _c1, ctx.Medium));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c3, ctx.isStrong))(\"ngStyle\", i0.ɵɵpureFunction1(17, _c1, ctx.Strong));\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgStyle, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\".password-strength[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.strength-indicator[_ngcontent-%COMP%] {\\r\\n  width: 30%;\\r\\n  height: 10px;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.weak[_ngcontent-%COMP%] {\\r\\n  background-color: red;\\r\\n}\\r\\n\\r\\n.medium[_ngcontent-%COMP%] {\\r\\n  background-color: yellow;\\r\\n}\\r\\n\\r\\n.strong[_ngcontent-%COMP%] {\\r\\n  background-color: green;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2ltcGxlLWdyZWV0aW5nLWZvcm0vc2ltcGxlLWdyZWV0aW5nLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbIi5wYXNzd29yZC1zdHJlbmd0aCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5zdHJlbmd0aC1pbmRpY2F0b3Ige1xyXG4gIHdpZHRoOiAzMCU7XHJcbiAgaGVpZ2h0OiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLndlYWsge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuLm1lZGl1bSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG59XHJcblxyXG4uc3Ryb25nIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["forwardRef","NG_VALUE_ACCESSOR","SimpleGreetingFormComponent","constructor","_","writeValue","value","password","validatePassword","registerOnChange","fn","onChange","registerOnTouched","onTouched","length","isWeak","isMedium","isStrong","Weak","Medium","Strong","hasLetters","test","hasNumbers","hasSymbols","complexityLevel","onPasswordChange","event","target","selectors","features","provide","useExisting","multi","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Andrii\\Desktop\\ProgressBar\\ValidationPassword\\src\\app\\simple-greeting-form\\simple-greeting-form.component.ts","C:\\Users\\Andrii\\Desktop\\ProgressBar\\ValidationPassword\\src\\app\\simple-greeting-form\\simple-greeting-form.component.html"],"sourcesContent":["import { Component, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-simple-greeting-form',\r\n  templateUrl: './simple-greeting-form.component.html',\r\n  styleUrls: ['./simple-greeting-form.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SimpleGreetingFormComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class SimpleGreetingFormComponent implements ControlValueAccessor {\r\n  // Initial state\r\n  password: string = '';\r\n  Weak = 'gray';\r\n  Medium = 'gray';\r\n  Strong = 'gray';\r\n  isWeak: boolean = false;\r\n  isMedium: boolean = false;\r\n  isStrong: boolean = false;\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  writeValue(value: string): void {\r\n    this.password = value;\r\n    this.validatePassword();\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  validatePassword() {\r\n    // Condition if there are less than 8 values in the input\r\n    if (this.password.length < 8) {\r\n      this.isWeak = false;\r\n      this.isMedium = false;\r\n      this.isStrong = false;\r\n      this.Weak = 'red';\r\n      this.Medium = 'red';\r\n      this.Strong = 'red';\r\n      this.onChange('');\r\n\r\n      return;\r\n    }\r\n\r\n    // Assignment of variables for validation\r\n    const hasLetters = /[a-zA-Z]/.test(this.password);\r\n    const hasNumbers = /\\d/.test(this.password);\r\n    const hasSymbols = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(this.password);\r\n\r\n    // Determining the content in the input\r\n    const complexityLevel = (hasLetters ? 1 : 0) + (hasNumbers ? 1 : 0) + (hasSymbols ? 1 : 0);\r\n\r\n    // Checking the received number from the variable\r\n    switch (complexityLevel) {\r\n      // First level\r\n      case 1:\r\n        this.isWeak = true;\r\n        this.isMedium = true;\r\n        this.isStrong = false;\r\n        this.Weak = 'red';\r\n        this.Medium = 'gray';\r\n        this.Strong = 'gray';\r\n        this.onChange(this.password);\r\n        return;\r\n\r\n      // Second level\r\n      case 2:\r\n        this.isWeak = false;\r\n        this.isMedium = true;\r\n        this.isStrong = false;\r\n        this.Weak = 'yellow';\r\n        this.Medium = 'yellow';\r\n        this.Strong = 'gray';\r\n        this.onChange(this.password);\r\n        return;\r\n\r\n      // Three level\r\n      case 3:\r\n        this.isWeak = false;\r\n        this.isMedium = false;\r\n        this.isStrong = true;\r\n        this.Weak = 'green';\r\n        this.Medium = 'green';\r\n        this.Strong = 'green';\r\n        this.onChange(this.password);\r\n        return;\r\n    }\r\n  }\r\n\r\n  onPasswordChange(event: any) {\r\n    this.password = event.target.value;\r\n    this.validatePassword();\r\n  }\r\n}\r\n","<form>\r\n\r\n  <label for=\"password\">Пароль:</label>\r\n  <input type=\"password\"  id=\"password\" name=\"password\" [(ngModel)]=\"password\" (input)=\"validatePassword()\">\r\n\r\n  <div class=\"password-strength\">\r\n\r\n    <div class=\"strength-indicator weak\" [ngClass]=\"{isWeak}\" [ngStyle]=\"{'background-color': Weak}\">\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"strength-indicator medium\" [ngClass]=\"{isMedium}\" [ngStyle]=\"{'background-color': Medium}\">\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"strength-indicator strong\" [ngClass]=\"{isStrong}\" [ngStyle]=\"{'background-color': Strong}\">\r\n      <span></span>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}